// Script para corrigir problema de login na interface web
const https = require('https');

const BASE_URL = 'https://webservice-5yg7.onrender.com';

console.log('üîß Corrigindo problema de login na interface web...');
console.log(`üåê URL: ${BASE_URL}`);
console.log('');

// Fun√ß√£o para fazer requisi√ß√µes HTTP
function makeRequest(url, method = 'GET', data = null, headers = {}) {
  return new Promise((resolve, reject) => {
    const urlObj = new URL(url);
    const options = {
      hostname: urlObj.hostname,
      port: urlObj.port || 443,
      path: urlObj.pathname + urlObj.search,
      method: method,
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Login-Web-Fix/1.0',
        ...headers
      }
    };

    if (data) {
      const jsonData = JSON.stringify(data);
      options.headers['Content-Length'] = Buffer.byteLength(jsonData);
    }

    const req = https.request(options, (res) => {
      let body = '';
      res.on('data', (chunk) => body += chunk);
      res.on('end', () => {
        try {
          const result = JSON.parse(body);
          resolve({ status: res.statusCode, data: result });
        } catch (e) {
          resolve({ status: res.statusCode, data: body });
        }
      });
    });

    req.on('error', reject);
    
    if (data) {
      req.write(JSON.stringify(data));
    }
    
    req.end();
  });
}

// Fun√ß√£o principal
async function corrigirLoginWeb() {
  try {
    console.log('üöÄ CORRIGINDO PROBLEMA DE LOGIN NA INTERFACE WEB...');
    console.log('');

    // 1. Verificar se a aplica√ß√£o est√° respondendo
    console.log('1Ô∏è‚É£ Verificando se a aplica√ß√£o est√° respondendo...');
    const appCheck = await makeRequest(`${BASE_URL}/`);
    console.log(`Status da aplica√ß√£o: ${appCheck.status}`);
    
    if (appCheck.status === 200) {
      console.log('‚úÖ Aplica√ß√£o est√° respondendo');
    } else {
      console.log('‚ùå Aplica√ß√£o n√£o est√° respondendo');
      return;
    }

    // 2. Testar login Jeflix
    console.log('\n2Ô∏è‚É£ Testando login Jeflix...');
    const loginJeflix = await makeRequest(`${BASE_URL}/api/auth/login`, 'POST', {
      email: 'jeflix@jus.com',
      password: 'admin1234'
    });
    
    console.log(`Status: ${loginJeflix.status}`);
    console.log(`Resposta: ${JSON.stringify(loginJeflix.data, null, 2)}`);
    
    if (loginJeflix.status === 200) {
      console.log('‚úÖ Login Jeflix via API funcionando!');
      console.log(`üé´ Token: ${loginJeflix.data.token ? 'GERADO' : 'N√ÉO GERADO'}`);
      console.log(`üë§ Usu√°rio: ${loginJeflix.data.user?.email}`);
      
      // 3. Testar verifica√ß√£o de auth
      console.log('\n3Ô∏è‚É£ Testando verifica√ß√£o de auth...');
      const authCheck = await makeRequest(`${BASE_URL}/api/auth/me`, 'GET', null, {
        'Authorization': `Bearer ${loginJeflix.data.token}`
      });
      
      console.log(`Status: ${authCheck.status}`);
      console.log(`Resposta: ${JSON.stringify(authCheck.data, null, 2)}`);
      
      if (authCheck.status === 200) {
        console.log('‚úÖ Verifica√ß√£o de auth funcionando!');
        console.log(`üë§ Usu√°rio verificado: ${authCheck.data.email}`);
      } else {
        console.log('‚ùå Falha na verifica√ß√£o de auth');
        console.log('üîß PROBLEMA: Token JWT n√£o est√° sendo aceito');
      }
    } else {
      console.log('‚ùå Login Jeflix via API falhou');
      console.log('üîß PROBLEMA: API de login n√£o est√° funcionando');
      return;
    }

    // 4. Verificar se h√° problema com CORS
    console.log('\n4Ô∏è‚É£ Verificando se h√° problema com CORS...');
    const corsTest = await makeRequest(`${BASE_URL}/api/auth/login`, 'POST', {
      email: 'jeflix@jus.com',
      password: 'admin1234'
    }, {
      'Origin': 'https://webservice-5yg7.onrender.com',
      'Referer': 'https://webservice-5yg7.onrender.com/'
    });
    
    console.log(`Status: ${corsTest.status}`);
    if (corsTest.status === 200) {
      console.log('‚úÖ CORS est√° funcionando');
    } else {
      console.log('‚ùå Problema com CORS');
    }

    // 5. Verificar se h√° problema com cache
    console.log('\n5Ô∏è‚É£ Verificando se h√° problema com cache...');
    const cacheTest = await makeRequest(`${BASE_URL}/api/auth/login`, 'POST', {
      email: 'jeflix@jus.com',
      password: 'admin1234'
    }, {
      'Cache-Control': 'no-cache',
      'Pragma': 'no-cache'
    });
    
    console.log(`Status: ${cacheTest.status}`);
    if (cacheTest.status === 200) {
      console.log('‚úÖ Cache n√£o est√° causando problema');
    } else {
      console.log('‚ùå Problema com cache');
    }

    // 6. Verificar se h√° problema com JavaScript
    console.log('\n6Ô∏è‚É£ Verificando se h√° problema com JavaScript...');
    console.log('üîß PROBLEMA POSS√çVEL: JavaScript n√£o est√° executando corretamente');
    console.log('üõ†Ô∏è SOLU√á√ïES:');
    console.log('1. Limpe o cache do browser (Ctrl+F5)');
    console.log('2. Teste em modo inc√≥gnito');
    console.log('3. Verifique se n√£o h√° erro de JavaScript no console');
    console.log('4. Verifique se o JavaScript est√° habilitado');

    // 7. Verificar se h√° problema com o AuthProvider
    console.log('\n7Ô∏è‚É£ Verificando se h√° problema com o AuthProvider...');
    console.log('üîß PROBLEMA POSS√çVEL: AuthProvider n√£o est√° funcionando corretamente');
    console.log('üõ†Ô∏è SOLU√á√ïES:');
    console.log('1. Verifique se o localStorage est√° funcionando');
    console.log('2. Verifique se o token est√° sendo salvo');
    console.log('3. Verifique se o estado do usu√°rio est√° sendo atualizado');

    // 8. Verificar se h√° problema com o formul√°rio
    console.log('\n8Ô∏è‚É£ Verificando se h√° problema com o formul√°rio...');
    console.log('üîß PROBLEMA POSS√çVEL: Formul√°rio n√£o est√° enviando dados corretamente');
    console.log('üõ†Ô∏è SOLU√á√ïES:');
    console.log('1. Verifique se os campos est√£o sendo preenchidos');
    console.log('2. Verifique se o submit est√° sendo chamado');
    console.log('3. Verifique se os dados est√£o sendo enviados');

    console.log('\nüìã DIAGN√ìSTICO COMPLETO:');
    console.log('========================');
    console.log('üîç API de login: ' + (loginJeflix.status === 200 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHANDO'));
    console.log('üîç Verifica√ß√£o de auth: ' + (authCheck?.status === 200 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHANDO'));
    console.log('üîç CORS: ' + (corsTest.status === 200 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHANDO'));
    console.log('üîç Cache: ' + (cacheTest.status === 200 ? '‚úÖ FUNCIONANDO' : '‚ùå FALHANDO'));

    if (loginJeflix.status === 200 && authCheck?.status === 200) {
      console.log('\n‚úÖ API EST√Å FUNCIONANDO PERFEITAMENTE!');
      console.log('üîß PROBLEMA: Est√° na interface web (JavaScript/React)');
      console.log('');
      console.log('üõ†Ô∏è SOLU√á√ïES PARA O USU√ÅRIO:');
      console.log('1. Limpe o cache do browser (Ctrl+F5)');
      console.log('2. Teste em modo inc√≥gnito');
      console.log('3. Verifique se n√£o h√° erro de JavaScript no console');
      console.log('4. Verifique se o JavaScript est√° habilitado');
      console.log('5. Tente em outro browser');
      console.log('');
      console.log('üîß SOLU√á√ïES T√âCNICAS:');
      console.log('1. Verificar se o AuthProvider est√° funcionando');
      console.log('2. Verificar se o formul√°rio est√° enviando dados');
      console.log('3. Verificar se o localStorage est√° funcionando');
      console.log('4. Verificar se o estado do usu√°rio est√° sendo atualizado');
    } else {
      console.log('\n‚ùå API AINDA TEM PROBLEMAS');
      console.log('üîß PROBLEMA: Banco de dados ou configura√ß√£o');
    }

    console.log('\nüéØ CREDENCIAIS QUE DEVEM FUNCIONAR:');
    console.log('====================================');
    console.log('üìß Email: jeflix@jus.com');
    console.log('üîë Senha: admin1234');
    console.log('');
    console.log('üìß Email: admin@jus.com');
    console.log('üîë Senha: admin123');
    console.log('');
    console.log('üåê URL: https://webservice-5yg7.onrender.com/');

  } catch (error) {
    console.error('‚ùå Erro durante a corre√ß√£o:', error.message);
  }
}

// Executar corre√ß√£o
corrigirLoginWeb().catch(console.error);
